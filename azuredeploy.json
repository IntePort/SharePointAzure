{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "siteLocation": {
            "type": "string"
        },
        "administratorAccount": {
            "type": "string"
        },
        "administratorPassword": {
            "type": "string"
        },
        "domainName": {
            "type": "string"
        },
        "domainNetBiosName": {
            "type": "string"
        }
    },
    "variables": {
        "ServiceName": "[toLower(resourceGroup().name)]",
        "servicePassword": "[parameters('administratorPassword')]",
        "DCDomainName": "[concat(variables('ServiceName'),'-DC')]",
        "SQLDomainName": "[concat(variables('ServiceName'),'-SQL')]",
        "SPDomainName": "[concat(variables('ServiceName'),'-SP')]",
        "StorageType": "Standard_LRS",
        "DCHardware": "Basic_A0",
        "SQLHardware": "Basic_A4",
        "SPHardware": "Basic_A4",
        "StorageName": "[concat(variables('ServiceName'),'storage')]",
        "VNetName": "[concat(variables('ServiceName'),'VNet')]",
        "DC1Name": "[concat(variables('ServiceName'),'-dc1')]",
        "SQL1Name": "[concat(variables('ServiceName'),'-sql1')]",
        "SP1Name": "[concat(variables('ServiceName'),'-sp1')]",
        "DC1Disk1Name": "[concat(variables('ServiceName'),'-DC1-os')]",
        "DC1Disk2Name": "[concat(variables('ServiceName'),'-DC1-data')]",
        "SQL1Disk1Name": "[concat(variables('ServiceName'),'-SQL1-os')]",
        "SQL1Disk2Name": "[concat(variables('ServiceName'),'-SQL1-data')]",
        "SP1Disk1Name": "[concat(variables('ServiceName'),'-SP1-os')]",
        "SP1Disk2Name": "[concat(variables('ServiceName'),'-SP1-data1')]",
        "SP1Disk3Name": "[concat(variables('ServiceName'),'-SP1-data2')]",
        "SPPrepareMachineModules": "\"xComputerManagement\",\"xNetworking\",\"xActiveDirectory\",\"xSQLServer_1.2.1.0\"",
        "DCPrepareMachineModules": "\"xComputerManagement\",\"xActiveDirectory\"",
        "SQLPrepareMachineModules": "\"xComputerManagement\",\"xNetworking\",\"xSqlPs\",\"xActiveDirectory\"",
        "DCImage": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-201504.01-en.us-127GB.vhd",
        "SQLImage": "fb83b3509582419d99629ce476bcb5c8__SQL-Server-2014-RTM-12.0.2048.0-Ent-ENU-Win2012R2-cy15su04",
        "SPImage": "c6e0f177abd8496e934234bd27f46c5d__SharePoint-2013-Trial-7-9-2015",
        "CreateADPrimaryDomainControllerCommand": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\CreateADPrimaryDomainController.ps1 -DomainName \"',parameters('domainName'),'\" -DomainNetBiosName \"',parameters('domainNetBiosName'),'\" -UserName \"',parameters('administratorAccount'),'\" -Password \"',parameters('administratorPassword'), '\" ')]",
        "SetupSQLCommand": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\SetupSQL.ps1 -DomainNetBiosName \"',parameters('domainNetBiosName'),'\" -SQLServiceAccount \"SQLService\" -SQLServiceAccountPassword \"',variables('servicePassword'), '\" -SQLAgentAccount \"SQLAgent\" -SQLAgentAccountPassword \"',variables('servicePassword'), '\" -SQLDrive  \"F\"  -SetupAccount \"SPSetup\"')]",

    },
    "resources": [
        {
            "type": "Microsoft.ClassicStorage/StorageAccounts",
            "name": "[variables('StorageName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "accountType": "[variables('StorageType')]"
            }
        },
        {
            "type": "Microsoft.ClassicNetwork/virtualNetworks",
            "name": "[variables('VNetName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/26"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [ "10.1.0.20" ]
                },
                "subnets": [
                    {
                        "name": "Subnet-SP",
                        "addressPrefix": "10.1.0.0/28"
                    },
                    {
                        "name": "Subnet-DC",
                        "addressPrefix": "10.1.0.16/28"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ClassicCompute/domainNames",
            "name": "[variables('DCDomainName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "label": "[variables('DCDomainName')]"
            }
        },
        {
            "type": "Microsoft.ClassicCompute/domainNames",
            "name": "[variables('SQLDomainName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "label": "[variables('SQLDomainName')]"
            }
        },
        {
            "type": "Microsoft.ClassicCompute/domainNames",
            "name": "[variables('SPDomainName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "label": "[variables('SPDomainName')]"
            }
        },
        {
            "type": "Microsoft.ClassicCompute/virtualMachines",
            "name": "[variables('DC1Name')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "domainName": {
                    "id": "[concat(resourceGroup().id, '/providers/Microsoft.ClassicCompute/domainNames/', variables('DCDomainName'))]"
                },
                "networkProfile": {
                    "virtualNetwork": {
                        "staticIpAddress": "10.1.0.20",
                        "id": "[resourceId('Microsoft.ClassicNetwork/virtualNetworks', variables('VNetName'))]",
                        "subnetNames": [
                            "Subnet-DC"
                        ]
                    },
                    "inputEndpoints": [
                        {
                            "enableDirectServerReturn": "False",
                            "endpointName": "Remote Desktop",
                            "privatePort": 3389,
                            "protocol": "tcp"
                        },
                        {
                            "enableDirectServerReturn": "False",
                            "endpointName": "Powershell",
                            "privatePort": 5986,
                            "protocol": "tcp"
                        }
                    ]
                },
                "hardwareProfile": {
                    "size": "[variables('DCHardware')]",
                    "platformGuestAgent": "true"
                },
                "operatingSystemProfile": {
                    "computerName": "[variables('DC1Name')]",
                    "adminUserName": "[parameters('administratorAccount')]",
                    "adminPassword": "[parameters('administratorPassword')]",
                    "windowsOperatingSystemProfile": {
                        "winRMListeners": [
                            {
                                "protocol": "Https"
                            }
                        ],
                        "unattendedSetupConfigurations": [
                            {
                                "configurationName": "oobeSystem",
                                "components": [
                                    {
                                        "componentName": "Microsoft-Windows-Shell-Setup",
                                        "settings": [
                                            {
                                                "settingName": "FirstLogonCommands",
                                                "content": {
                                                    "FirstLogonCommands": {
                                                        "@xmlns:wcm": "http://schemas.microsoft.com/WMIConfig/2002/State",
                                                        "SynchronousCommand": {
                                                            "@wcm:action": "add",
                                                            "CommandLine": "powershell.exe -Command Import-Module ServerManager; Install-WindowsFeature DNS; Get-NetAdapter Ethernet* | Set-DnsClientServerAddress -ServerAddresses 127.0.0.1",
                                                            "Order": "1"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "settingName": "AutoLogon",
                                                "content": {
                                                    "AutoLogon": {
                                                        "Enabled": "True",
                                                        "LogonCount": "1",
                                                        "Username": "[parameters('administratorAccount')]",
                                                        "Password": {
                                                            "Value": "[parameters('administratorPassword')]"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]

                    }
                },
                "storageProfile": {
                    "operatingSystemDisk": {
                        "diskName": "[variables('DC1Disk1Name')]",
                        "vhdUri": "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', variables('ServiceName'), variables('DC1Disk1Name'),'.vhd')]",
                        "caching": "ReadWrite",
                        "sourceImageName": "[variables('DCImage')]"
                    },
                    "dataDisks": [
                        {
                            "diskName": "[variables('DC1Disk2Name')]",
                            "caching": "None",
                            "diskSize": "120",
                            "lun": "0",
                            "vhdUri": "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', variables('ServiceName'), variables('DC1Disk2Name'),'.vhd')]",
                        }
                    ]

                },
                "extensions": [
                    {
                        "extension": "BGInfo",
                        "publisher": "Microsoft.Compute",
                        "version": "1.*"
                    },
                    {
                        "extension": "CustomScriptExtension",
                        "publisher": "Microsoft.Compute",
                        "version": "1.*",
                        "parameters": {
                            "public": {
                                "fileUris": [
                                    "https://wwprovisioningfiles.blob.core.windows.net/scripts/PrepareMachine.ps1",
                                    "https://wwprovisioningfiles.blob.core.windows.net/scripts/xComputerManagement.zip",
                                    "https://wwprovisioningfiles.blob.core.windows.net/scripts/xActiveDirectory.zip",
                                    "https://wwprovisioningfiles.blob.core.windows.net/scripts/xSQLServer_1.2.1.0.zip"
                                ],
                                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\PrepareMachine.ps1 -Modules ', variables('DCPrepareMachineModules'),' -Force')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.ClassicCompute/domainNames/', variables('DCDomainName'))]",
                "[concat('Microsoft.ClassicNetwork/virtualNetworks/', variables('VNetName'))]",
                "[concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))]"

            ]
        },
        {
            "type": "Microsoft.ClassicCompute/virtualMachines/extensions",
            "apiVersion": "2014-06-01",
            "name": "[concat(variables('DC1Name'),'/CreateADPrimaryDomainControllerCustomScript')]",
            "location": "[parameters('siteLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ClassicCompute/virtualMachines', variables('DC1Name'))]"
            ],
            "properties": {
                "extension": "CustomScriptExtension",
                "publisher": "Microsoft.Compute",
                "version": "1.*",
                "parameters": {
                    "public": {
                        "fileUris": [
                            "https://azuregalleryassetsch.blob.core.windows.net/microsoft-sharepoint-sql-0-3-0-preview/Common.ps1",
                            "https://azuregalleryassetsch.blob.core.windows.net/microsoft-sharepoint-sql-0-3-0-preview/CreateADPrimaryDomainController.ps1"
                        ],
                        "commandToExecute": "[variables('CreateADPrimaryDomainControllerCommand')]"
                    }
                }
            }
        },

        {
            "type": "Microsoft.ClassicCompute/virtualMachines",
            "name": "[variables('SQL1Name')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "domainName": {
                    "id": "[concat(resourceGroup().id, '/providers/Microsoft.ClassicCompute/domainNames/', variables('SQLDomainName'))]"
                },
                "networkProfile": {
                    "virtualNetwork": {
                        "id": "[resourceId('Microsoft.ClassicNetwork/virtualNetworks', variables('VNetName'))]",
                        "subnetNames": [
                            "Subnet-SP"
                        ]
                    },
                    "inputEndpoints": [
                        {
                            "enableDirectServerReturn": "False",
                            "endpointName": "Remote Desktop",
                            "privatePort": 3389,
                            "protocol": "tcp"
                        },
                        {
                            "enableDirectServerReturn": "False",
                            "endpointName": "Powershell",
                            "privatePort": 5986,
                            "protocol": "tcp"
                        }
                    ]
                },
                "hardwareProfile": {
                    "size": "[variables('SQLHardware')]",
                    "platformGuestAgent": "true"
                },
                "operatingSystemProfile": {
                    "computerName": "[variables('SQL1Name')]",
                    "adminUserName": "[parameters('administratorAccount')]",
                    "adminPassword": "[parameters('administratorPassword')]",
                    "windowsOperatingSystemProfile": {
                        "winRMListeners": [
                            {
                                "protocol": "Https"
                            }
                        ]

                    }
                },
                "storageProfile": {
                    "operatingSystemDisk": {
                        "diskName": "[variables('SQL1Disk1Name')]",
                        "vhdUri": "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', variables('ServiceName'), variables('SQL1Disk1Name'),'.vhd')]",
                        "caching": "ReadWrite",
                        "sourceImageName": "[variables('SQLImage')]"
                    },
                    "dataDisks": [
                        {
                            "diskName": "[variables('SQL1Disk2Name')]",
                            "caching": "None",
                            "diskSize": "120",
                            "lun": "0",
                            "vhdUri": "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', variables('ServiceName'), variables('SQL1Disk2Name'),'.vhd')]",
                        }
                    ]

                },
                "extensions": [
                    {
                        "extension": "BGInfo",
                        "publisher": "Microsoft.Compute",
                        "version": "1.*"
                    },
                    {
                        "extension": "CustomScriptExtension",
                        "publisher": "Microsoft.Compute",
                        "version": "1.*",
                        "parameters": {
                            "public": {
                                "fileUris": [
                                    "https://inteportprovisioning.blob.core.windows.net/scripts/PrepareMachine.ps1",
                                    "https://inteportprovisioning.blob.core.windows.net/scripts/xComputerManagement.zip",
                                    "https://inteportprovisioning.blob.core.windows.net/scripts/xNetworking.zip",
                                    "https://inteportprovisioning.blob.core.windows.net/scripts/xActiveDirectory.zip",
                                    "https://inteportprovisioning.blob.core.windows.net/scripts/xSqlPs.zip"
                                ],
                                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\PrepareMachine.ps1 -Modules ', variables('SQLPrepareMachineModules'),' -Force')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.ClassicCompute/domainNames/', variables('SQLDomainName'))]",
                "[concat('Microsoft.ClassicNetwork/virtualNetworks/', variables('VNetName'))]",
                "[concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))]",
                "[concat(variables('DC1Name'),'/CreateADPrimaryDomainControllerCustomScript')]"

            ]
        },
        {
            "type": "Microsoft.ClassicCompute/virtualMachines/extensions",
            "properties": {
                "extension": "CustomScriptExtension",
                "publisher": "Microsoft.Compute",
                "version": "1.*",
                "parameters": {
                    "public": {
                        "fileUris": [
                            "https://azuregalleryassetsch.blob.core.windows.net/microsoft-sharepoint-sql-0-3-0-preview/Common.ps1",
                            "https://azuregalleryassetsch.blob.core.windows.net/microsoft-sharepoint-sql-0-3-0-preview/CreateSqlServer.ps1"
                        ],
                        "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\CreateSqlServer.ps1 -DomainName \"',parameters('domainName'),'\" -DomainNetBiosName \"',parameters('domainNetBiosName'),'\" -DomainAdministratorUserName \"',parameters('administratorAccount'),'\" -DomainAdministratorPassword \"',parameters('administratorPassword'),'\" -SqlServerServiceAccountPassword \"',parameters('administratorPassword'),'\" -SharePointSetupUserAccountPassword \"',parameters('administratorPassword'),'\" ')]"
                    }
                }
            },
            "apiVersion": "2014-06-01",
            "name": "[concat(variables('SQL1Name'),'/CreateSQLCommand')]",
            "location": "[parameters('siteLocation')]",
            "dependsOn": [
                "[concat('Microsoft.ClassicCompute/virtualMachines/',variables('DC1Name'),'/extensions/CreateADPrimaryDomainControllerCustomScript')]",
                "[resourceId('Microsoft.ClassicCompute/virtualMachines', variables('SQL1Name'))]"
            ]
        }
    ]
}